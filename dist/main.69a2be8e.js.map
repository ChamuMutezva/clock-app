{"version":3,"sources":["main.js"],"names":["quortes","document","querySelector","author","wrapper","time__zone","located","refresh","toggleSwitch","list__values","Array","from","querySelectorAll","console","log","current__date","current__time","hour","min","time__abbr","time__status","timeApi","fetch","then","response","json","data","datetime","greet__msg","greet__img","date__arr","split","time__arr","hours","Number","classList","remove","add","innerHTML","src","abbreviation","day_of_year","day_of_week","week_number","reFreshQuortes","content","time_zone","city","country_name","addEventListener","setInterval","toggle__intro","time__section","toggle"],"mappings":";AAAA,IAAMA,EAAUC,SAASC,cAAc,YACjCC,EAASF,SAASC,cAAc,WAChCE,EAAUH,SAASC,cAAc,YACjCG,EAAaJ,SAASC,cAAc,eACpCI,EAAUL,SAASC,cAAc,aACjCK,EAAUN,SAASC,cAAc,YACjCM,EAAeP,SAASC,cAAc,0BACtCO,EAAeC,MAAMC,KAAKV,SAASW,iBAAiB,iBAC1DC,QAAQC,IAAIL,EAAa,IACzB,IAAIM,EAAgB,GAChBC,EAAgB,GAChBC,EAAO,GACPC,EAAM,GACNC,EAAa,GACXC,EAAenB,SAASC,cAAc,iBAC5CW,QAAQC,IAAId,GAEZ,IAAMqB,EAAU,WACZC,MAAM,kCACDC,KAAK,SAAAC,GAAYA,OAAAA,EAASC,SAC1BF,KAAK,SAAAG,GACFb,QAAQC,IAAIY,GACZb,QAAQC,IAAIY,EAAKC,UACXC,IAAAA,EAAa3B,SAASC,cAAc,eACpC2B,EAAa5B,SAASC,cAAc,oBACpC4B,EAAYJ,EAAKC,SAASI,MAAM,KAChCC,EAAYF,EAAU,GAAGC,MAAM,KACrChB,EAAgBe,EAAU,GAC1Bd,EAAgBgB,EAAU,GAC1BC,MAAQC,OAAOlB,EAAce,MAAM,KAAK,IACxCb,EAAMgB,OAAOlB,EAAce,MAAM,KAAK,IACtClB,QAAQC,IAAIe,GACZhB,QAAQC,IAAIC,GACZF,QAAQC,IAAIkB,GACZnB,QAAQC,IAAIE,GACZH,QAAQC,IAAII,GACZL,QAAQC,IAAIoB,OAAOD,QACnBA,OAAS,GACL7B,EAAQ+B,UAAUC,OAAO,WACzBhC,EAAQ+B,UAAUE,IAAI,WAE1BJ,OAAS,GAAKL,EAAWU,UAAY,eACjCL,OAAS,GAAKL,EAAWU,UAAY,iBACjCV,EAAWU,UAAY,iBAE/BL,OAAS,GAAKA,OAAS,MACnBJ,EAAWU,IAAM,iCAGrBlC,EAAWiC,UAAYZ,EAAKc,aAE5BtB,EAAMA,EAAM,GAASA,IAAAA,OAAAA,GAAQA,EAC7Be,MAAQA,MAAQ,GAASA,IAAAA,OAAAA,OAAUA,MACnCb,EAAakB,UAAeL,GAAAA,OAAAA,MAASf,KAAAA,OAAAA,GAErCT,EAAa,GAAG6B,UAAYZ,EAAKe,YAAc,EAC/ChC,EAAa,GAAG6B,UAAYZ,EAAKgB,YAAc,EAC/CjC,EAAa,GAAG6B,UAAYZ,EAAKiB,YAAc,KAMrDC,EAAiB,WACnBtB,MAAM,kCAEDC,KAAK,SAAAC,GAAYA,OAAAA,EAASC,SAC1BF,KAAK,SAAAG,GACFb,QAAQC,IAAIY,GAEZ1B,EAAQsC,UAAYZ,EAAKmB,QACzB1C,EAAOmC,UAAYZ,EAAKvB,UAKpCmB,MAAM,+BACDC,KAAK,SAAAC,GAAYA,OAAAA,EAASC,SAC1BF,KAAK,SAAAG,GACFb,QAAQC,IAAIY,GACZb,QAAQC,IAAIY,EAAKoB,WACjBxC,EAAQgC,UAAkBZ,MAAAA,OAAAA,EAAKqB,KAASrB,MAAAA,OAAAA,EAAKsB,cAC7CvC,EAAa,GAAG6B,UAAYZ,EAAKoB,YAMzCzB,IACAuB,IAEArC,EAAQ0C,iBAAiB,QAASL,GAElCM,YAAY,WACRrC,QAAQC,IAAI,WACZO,IACAuB,KACD,KAEHpC,EAAayC,iBAAiB,QAAS,WACnCpC,QAAQC,IAAI,yBACNqC,IAAAA,EAAgBlD,SAASC,cAAc,UACvCkD,EAAgBnD,SAASC,cAAc,kBAC7CiD,EAAchB,UAAUkB,OAAO,cAC/BD,EAAcjB,UAAUkB,OAAO","file":"main.69a2be8e.js","sourceRoot":"..","sourcesContent":["const quortes = document.querySelector(\".quortes\")\r\nconst author = document.querySelector(\".author\")\r\nconst wrapper = document.querySelector(\".wrapper\")\r\nconst time__zone = document.querySelector(\".time__zone\")\r\nconst located = document.querySelector(\".location\")\r\nconst refresh = document.querySelector(\".refresh\")\r\nconst toggleSwitch = document.querySelector('input[type=\"checkbox\"]')\r\nconst list__values = Array.from(document.querySelectorAll(\".list__value\"))\r\nconsole.log(list__values[0])\r\nlet current__date = \"\"\r\nlet current__time = \"\"\r\nlet hour = \"\"\r\nlet min = \"\"\r\nlet time__abbr = \"\"\r\nconst time__status = document.querySelector(\".time__status\")\r\nconsole.log(quortes)\r\n\r\nconst timeApi = () => {\r\n    fetch('http://worldtimeapi.org/api/ip')\r\n        .then(response => response.json())\r\n        .then(data => {\r\n            console.log(data)\r\n            console.log(data.datetime)\r\n            const greet__msg = document.querySelector(\".greet__msg\")\r\n            const greet__img = document.querySelector(\".time__icon__img\")\r\n            const date__arr = data.datetime.split(\"T\")\r\n            const time__arr = date__arr[1].split(\".\")\r\n            current__date = date__arr[0]\r\n            current__time = time__arr[0]\r\n            hours = Number(current__time.split(\":\")[0])\r\n            min = Number(current__time.split(\":\")[1])\r\n            console.log(greet__img)\r\n            console.log(current__date)\r\n            console.log(time__arr)\r\n            console.log(current__time)\r\n            console.log(min)\r\n            console.log(Number(hours))\r\n            hours <= 12 ?\r\n                wrapper.classList.remove(\"evening\") :\r\n                wrapper.classList.add(\"evening\")\r\n\r\n            hours <= 12 ? greet__msg.innerHTML = \"Good Morning\" :\r\n                hours <= 18 ? greet__msg.innerHTML = \"Good Afternoon\" :\r\n                    greet__msg.innerHTML = \"Good Evening\"\r\n\r\n            hours >= 6 && hours <= 17 ?\r\n                greet__img.src = \"./assets/desktop/icon-sun.svg\" :\r\n                \"./assets/desktop/icon-moon.svg\"\r\n\r\n            time__zone.innerHTML = data.abbreviation\r\n\r\n            min = min < 10 ? `0${min}` : min\r\n            hours = hours < 10 ? `0${hours}` : hours\r\n            time__status.innerHTML = `${hours}:${min}`\r\n\r\n            list__values[1].innerHTML = data.day_of_year + 1\r\n            list__values[2].innerHTML = data.day_of_week + 1\r\n            list__values[3].innerHTML = data.week_number + 1\r\n        })\r\n\r\n}\r\n\r\n\r\nconst reFreshQuortes = () => {\r\n    fetch('https://api.quotable.io/random')\r\n        // fetch('https://programming-quotes-api.herokuapp.com/')\r\n        .then(response => response.json())\r\n        .then(data => {\r\n            console.log(data)\r\n            // console.log(`${data.content} â€”${data.author}`)\r\n            quortes.innerHTML = data.content\r\n            author.innerHTML = data.author\r\n        })\r\n}\r\n\r\n\r\nfetch('https://freegeoip.app/json/')\r\n    .then(response => response.json())\r\n    .then(data => {\r\n        console.log(data)\r\n        console.log(data.time_zone)\r\n        located.innerHTML = `In ${data.city}, ${data.country_name}`\r\n        list__values[0].innerHTML = data.time_zone\r\n\r\n    })\r\n\r\n\r\n\r\ntimeApi()\r\nreFreshQuortes();\r\n\r\nrefresh.addEventListener(\"click\", reFreshQuortes)\r\n\r\nsetInterval(() => {\r\n    console.log(\"counter\")\r\n    timeApi()\r\n    reFreshQuortes();\r\n}, 60000)\r\n\r\ntoggleSwitch.addEventListener(\"click\", () => {\r\n    console.log(\"toggle button clicked\")\r\n    const toggle__intro = document.querySelector(\".intro\")\r\n    const time__section = document.querySelector(\".time__section\")\r\n    toggle__intro.classList.toggle(\"intro__out\")\r\n    time__section.classList.toggle(\"time__toggle\")\r\n})"]}