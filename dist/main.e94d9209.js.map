{"version":3,"sources":["main.js"],"names":["quortes","document","querySelector","author","wrapper","time__zone","located","refresh","toggleSwitch","list__values","Array","from","querySelectorAll","flip","refreshRotation","current__date","current__time","hours","min","time__abbr","time__status","timeApi","fetch","then","response","json","data","greet__msg","greet__img","secondary","list__label","date__arr","datetime","split","time__arr","Number","classList","remove","add","innerHTML","forEach","item","console","log","abbreviation","day_of_year","day_of_week","week_number","reFreshQuortes","gsap","set","transformOrigin","to","duration","rotation","content","city","country_name","time_zone","addEventListener","setInterval","more","toggle__intro","time__section","toggle","y","ease","x"],"mappings":"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","file":"main.e94d9209.js","sourceRoot":"..","sourcesContent":["const quortes = document.querySelector(\".quortes\")\r\nconst author = document.querySelector(\".author\")\r\nconst wrapper = document.querySelector(\".wrapper\")\r\nconst time__zone = document.querySelector(\".time__zone\")\r\nconst located = document.querySelector(\".location\")\r\nconst refresh = document.querySelector(\".refresh\")\r\nconst toggleSwitch = document.querySelector('input[type=\"checkbox\"]')\r\nconst list__values = Array.from(document.querySelectorAll(\".list__value\"))\r\nlet flip = true\r\nlet refreshRotation = true\r\n\r\n//console.log(list__values[0])\r\nlet current__date = \"\"\r\nlet current__time = \"\"\r\nlet hours = \"\"\r\nlet min = \"\"\r\nlet time__abbr = \"\"\r\nconst time__status = document.querySelector(\".time__status\")\r\n//console.log(quortes)\r\n\r\nconst timeApi = () => {\r\n    fetch('https://worldtimeapi.org/api/ip') //'https://worldtimeapi.org/api/ip'\r\n        .then(response => response.json())\r\n        .then(data => {\r\n            // console.log(data)\r\n            //  console.log(data.datetime)\r\n            const greet__msg = document.querySelector(\".greet__msg\")\r\n            const greet__img = Array.from(document.querySelectorAll(\".time__icon__img\"))\r\n            const secondary = document.querySelector(\".secondary\")\r\n            const list__label = document.querySelectorAll(\".list__label\")\r\n\r\n            const date__arr = data.datetime.split(\"T\")\r\n            const time__arr = date__arr[1].split(\".\")\r\n            current__date = date__arr[0]\r\n            current__time = time__arr[0]\r\n            hours = Number(current__time.split(\":\")[0])\r\n            min = Number(current__time.split(\":\")[1])\r\n\r\n            hours <= 12 ?\r\n                wrapper.classList.remove(\"evening\") :\r\n                wrapper.classList.add(\"evening\")\r\n\r\n            hours < 5 || hours >= 18 ?\r\n                greet__msg.innerHTML = `Good Evening<span class=\"greet__msg__hide\">, it's currently</span>` :\r\n                hours < 12 ?\r\n                    greet__msg.innerHTML = `Good Morning<span class=\"greet__msg__hide\">, it's currently</span>` :\r\n                    greet__msg.innerHTML = `Good Afternoon<span class=\"greet__msg__hide\">, it's currently</span>`\r\n\r\n            hours >= 6 && hours <= 17 ?\r\n                greet__img[0].classList.remove(\"hide__icon\") :\r\n                greet__img[1].classList.add(\"hide__icon\")\r\n\r\n            hours >= 6 && hours <= 17 ?\r\n                greet__img[0].classList.add(\"hide__icon\") :\r\n                greet__img[1].classList.remove(\"hide__icon\")\r\n\r\n\r\n\r\n            hours >= 6 && hours <= 17 ?\r\n                (\r\n                    //  greet__img[0].classList.remove(\"hide__icon\"),\r\n                    secondary.classList.remove(\"dark__mode\"),\r\n                    list__values.forEach(item => {\r\n                        item.classList.remove(\"light__mode\")\r\n                    }),\r\n                    list__label.forEach(item => {\r\n                        item.classList.remove(\"light__mode\")\r\n                    })\r\n                ) :\r\n                (\r\n                    secondary.classList.add(\"dark__mode\"),\r\n                    list__values.forEach(item => {\r\n                        item.classList.add(\"light__mode\")\r\n                    }),\r\n                    list__label.forEach(item => {\r\n                        item.classList.add(\"light__mode\")\r\n                    }))\r\n\r\n            console.log(hours)\r\n            time__zone.innerHTML = data.abbreviation\r\n            console.log(greet__img[0])\r\n            console.log(greet__img[1])\r\n\r\n            min = min < 10 ? `0${min}` : min\r\n            hours = hours < 10 ? `0${hours}` : hours\r\n            time__status.innerHTML = `${hours}:${min}`\r\n\r\n            list__values[1].innerHTML = data.day_of_year + 1\r\n            list__values[2].innerHTML = data.day_of_week + 1\r\n            list__values[3].innerHTML = data.week_number + 1\r\n        })\r\n\r\n}\r\n\r\n\r\nconst reFreshQuortes = () => {\r\n    gsap.set(\".refresh__img\", { transformOrigin: \"50% 50%\" })\r\n    if (refreshRotation) {\r\n        gsap.to(\".refresh__img\", { duration: 1, rotation: 360 })\r\n    } else {\r\n        gsap.to(\".refresh__img\", { duration: 1, rotation: -360 })\r\n    }\r\n    refreshRotation = !refreshRotation\r\n    fetch('https://api.quotable.io/random')\r\n        // fetch('https://programming-quotes-api.herokuapp.com/')\r\n        .then(response => response.json())\r\n        .then(data => {\r\n            //  console.log(data)\r\n            // console.log(`${data.content} â€”${data.author}`)\r\n            quortes.innerHTML = data.content\r\n            author.innerHTML = data.author\r\n        })\r\n}\r\n\r\n\r\nfetch('https://freegeoip.app/json/')\r\n    .then(response => response.json())\r\n    .then(data => {\r\n        //  console.log(data)\r\n        //  console.log(data.time_zone)\r\n        located.innerHTML = `In ${data.city}, ${data.country_name}`\r\n        list__values[0].innerHTML = data.time_zone\r\n\r\n    })\r\n\r\n\r\n\r\ntimeApi()\r\nreFreshQuortes();\r\n\r\nrefresh.addEventListener(\"click\", reFreshQuortes)\r\n\r\nsetInterval(() => {\r\n    //  console.log(\"counter\")\r\n    timeApi()\r\n    reFreshQuortes();\r\n}, 60000)\r\n\r\ntoggleSwitch.addEventListener(\"click\", () => {\r\n\r\n    const more = document.querySelector(\".more\")\r\n    const secondary = document.querySelector(\".secondary\")\r\n    const toggle__intro = document.querySelector(\".intro\")\r\n    const time__section = document.querySelector(\".time__section\")\r\n    //  const slider = document.querySelector(\".slider\")\r\n\r\n\r\n    more.innerHTML === \"more\" ? more.innerHTML = \"less\" : more.innerHTML = \"more\"\r\n    console.log(more.innerHTML)\r\n    toggle__intro.classList.toggle(\"intro__out\")\r\n    time__section.classList.toggle(\"time__toggle\")\r\n    secondary.classList.toggle(\"hide__sec\")\r\n    // gsap.set(\".slider\", { transformOrigin: \"50% 50%\"})\r\n\r\n    //   secondary.classList.toggle(\"dark__mode\")\r\n    /*  list__values.forEach(item => {\r\n          item.classList.toggle(\"light__mode\")\r\n      })\r\n      list__label.forEach(item => {\r\n          item.classList.toggle(\"light__mode\")\r\n      })\r\n  */\r\n\r\n    if (flip) {\r\n        gsap.to(\".slider\", { duration: 1, rotation: 180 })\r\n        gsap.to(secondary, { duration: 2, y: 50, ease: \"elastic\" })\r\n\r\n    } else {\r\n        gsap.to(\".slider\", { duration: 1, rotation: -180 })\r\n        // gsap.from(secondary, {duration: 2, y: -50, ease: \"back\"})\r\n        gsap.from(secondary, { duration: 1, x: 50, ease: \"back\" });\r\n    }\r\n    flip = !flip\r\n})"]}